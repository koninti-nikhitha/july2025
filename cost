from typing import List
from collections import Counter

class Solution:
    def minCost(self, basket1: List[int], basket2: List[int]) -> int:
        total = Counter(basket1) + Counter(basket2)
        if any(count % 2 for count in total.values()):
            return -1

        need_swap = []
        count1 = Counter(basket1)
        for num in total:
            diff = count1[num] - total[num] // 2
            if diff > 0:
                need_swap.extend([num] * diff)

        need_swap.sort()
        min_item = min(total)
        n = len(need_swap)

        return sum(min(x, 2 * min_item) for x in need_swap[:n // 2])
