def merge_sorted_arrays_brute_force(arr1, arr2):
    # Step 1: Combine the arrays
    combined = arr1 + arr2
    
    # Step 2: Sort the combined array
    combined.sort()
    
    return combined

# Example
arr1 = [1, 3, 5]
arr2 = [2, 4, 6]

result = merge_sorted_arrays_brute_force(arr1, arr2)
print(result)  # Output: [1, 2, 3, 4, 5, 6]



def merge_sorted_arrays(arr1, arr2):
    merged = []
    i = j = 0

    # Compare elements from both arrays and add the smaller one
    while i < len(arr1) and j < len(arr2):
        if arr1[i] < arr2[j]:
            merged.append(arr1[i])
            i += 1
        else:
            merged.append(arr2[j])
            j += 1

    # Append any remaining elements
    while i < len(arr1):
        merged.append(arr1[i])
        i += 1
    while j < len(arr2):
        merged.append(arr2[j])
        j += 1

    return merged

# Example
arr1 = [1, 3, 5]
arr2 = [2, 4, 6]

result = merge_sorted_arrays(arr1, arr2)
print(result)  # Output: [1, 2, 3, 4, 5, 6]



whith 0 space:
arr1=[1,3,5,6]
arr2=[2,4,7,8]
n=len(arr1)
m=len(arr2)
left=n-1
right=0
while(left>=0 and right<=m):
    if left>right:
        arr1[left],arr2[right]=arr2[right],arr1[left]
        left-=1
        right+=1
    else:
        break;
arr1.sort()
arr2.sort()
combined=arr1+arr2
print(combined)
output:[1,2,3,4,5,6,7,8]
#left  should be greater than the right


gap method
import math

def next_gap(gap):
    if gap <= 1:
        return 0
    return math.ceil(gap / 2)

def merge(arr1, arr2):
    n = len(arr1)
    m = len(arr2)
    gap = next_gap(n + m)

    while gap > 0:
        # 1. Compare elements in the first array
        i = 0
        while i + gap < n:
            if arr1[i] > arr1[i + gap]:
                arr1[i], arr1[i + gap] = arr1[i + gap], arr1[i]
            i += 1

        # 2. Compare between both arrays
        j = gap - n if gap > n else 0
        while i < n and j < m:
            if arr1[i] > arr2[j]:
                arr1[i], arr2[j] = arr2[j], arr1[i]
            i += 1
            j += 1

        # 3. Compare elements in the second array
        if j < m:
            j = 0
            while j + gap < m:
                if arr2[j] > arr2[j + gap]:
                    arr2[j], arr2[j + gap] = arr2[j + gap], arr2[j]
                j += 1

        gap = next_gap(gap)

# Example
arr1 = [1, 3, 5, 6]
arr2 = [2, 4, 7, 8]

merge(arr1, arr2)
print("arr1:", arr1)
print("arr2:", arr2)
sc=0 with no sorting
from typing import List
import math

with no zeros appending
from typing import List

class Solution:
    def merge(self, arr1: List[int], m: int, arr2: List[int], n: int) -> List[int]:
        # Start merging from the back
        i = m - 1
        j = n - 1
        k = m + n - 1

        # Merge in-place in arr1 from the back
        while i >= 0 and j >= 0:
            if arr1[i] > arr2[j]:
                arr1[k] = arr1[i]
                i -= 1
            else:
                arr1[k] = arr2[j]
                j -= 1
            k -= 1

        # Copy remaining arr2 elements, if any
        while j >= 0:
            arr1[k] = arr2[j]
            j -= 1
            k -= 1

        # Return only the sorted, merged portion (drop trailing 0s)
        return arr1[:m + n]









arr1=[1,3,4]
arr2=[2,6,7]
n=len(arr1)
m=len(arr2)
arr3=[0]*(n+m)
left=0
right=0
ind=0
while(left<n and right<m):
    if arr1[left]<arr2[right]:
        
        arr3[ind]=arr1[left]
        ind+=1
        left+=1
    else:
        
        arr3[ind]=arr2[right]
        right+=1
        ind+=1
while(left<n):
    arr3[ind]=arr1[left]
    ind+=1
    left+=1
    
while(right<m):
    arr3[ind]=arr2[right]
    ind+=1
    right+=1
   
'''for i in range(0,n+m):
    if(i<n):
        arr1[i]=arr3[i]
    else:
        arr2[i-n]=arr3[i]'''
arr1=arr3[:n]
arr2=arr3[n:]
print(arr1)
print(arr2)
print(arr3)
        

    

