class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        n=len(nums)
        ans=[]
        for i in range(n):
            product=1
            for j in range(0,n):
                if i!=j:
                    product*=nums[j]
            ans.append(product)
        return ans

        optimal aproach
        class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
       
        n=len(nums)
        prod=1
        left=[0]*n
        for i in range(0,n):
            prod=prod*nums[i]
            left[i]=prod
        prod=1
        right=[0]*n
        for i in range(n-1,-1,-1):
            prod=prod*nums[i]
            right[i]=prod
        ans=[0]*n
        ans[0]=right[1]
        for i in range(1,n-1):
            ans[i]=left[i-1]*right[i+1]
        ans[n-1]=left[n-2]
        return ans



    
#better approach by using division 
'''nums=[1,2,0,4]
no_of_zero=0
prod=1
for i in nums:
    if(i==0):
        no_of_zero+=1
    else:
        prod=prod*i
ans=[]
for i in nums:
    if(no_of_zero>1):
        ans.append(0)
    else:
        if(no_of_zero==1):
            if(i==0):
                ans.append(prod)
            else:
                ans.append(0)
        else:
            ans.append(prod//i)
print(ans)'''
          
